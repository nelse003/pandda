#!/usr/bin/env ccp4-python

import os, sys

sys.path.append(os.path.join(os.environ['PANDDA_TOP'], 'lib-python'))

from PyQt4.QtGui import QApplication
from PANDDAs.jiffies import parse_phil_args
from PANDDAs.summary import panddaWindow, panddaHtmlWidget   

def show_summary():
    app = QApplication(sys.argv)
    window = panddaWindow()    
    window.add_tab(panddaHtmlWidget(name='Dataset Summary', content='./results_summaries/success_summary_table.html'))
    window.add_tab(panddaHtmlWidget(name='Dataset Summary', content='./results_summaries/pandda_initial.html'))
    window.add_tab(panddaHtmlWidget(name='Results Summary', content='./results_summaries/pandda_analyse.html'))
    window.add_tab(panddaHtmlWidget(name='Inspect Summary', content='./results_summaries/pandda_inspect.html'))
    window.show()
    app.exec_()

if __name__ == '__main__':

    show_summary()
    sys.exit()

    # Show Defaults (just values)
    if '--show-defaults' in sys.argv:
        master_phil.show(attributes_level=0)
    # Show Defaults (including information)
    elif '--help' in sys.argv:
        master_phil.show(attributes_level=2)
    # ... or just run ...
    elif '--expert' in sys.argv:
        master_phil.show(attributes_level=4)
    # ... or just run ...
    else:
        working_phil = parse_phil_args(master_phil=master_phil, args=sys.argv[1:])
        out = run(params=working_phil.extract())
    # Exit (unnecessary, but eh)
    sys.exit()
